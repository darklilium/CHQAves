{
  "name": "react-bootstrap-modal",
  "version": "2.1.0",
  "description": "React Bootstrap Modal\r ===================================",
  "author": {
    "name": "Jason Quense",
    "email": "monastic.panic@gmail.com"
  },
  "main": "lib/Modal.js",
  "repository": {
    "type": "git",
    "url": "jquense/react-bootstrap-modal"
  },
  "license": "MIT",
  "keywords": [
    "react-boostrap-modal",
    "react-component",
    "modal",
    "portal",
    "dialog",
    "bootstrap"
  ],
  "scripts": {
    "test": "karma start --single-run",
    "tdd": "karma start",
    "clean": "rimraf lib/*",
    "less": "lessc -x src/less/rbm-complete.less lib/styles/rbm-complete.css & lessc -x src/less/rbm-patch.less lib/styles/rbm-patch.css",
    "copy": "cpy src/less/* lib/styles",
    "build": "npm run clean && babel src --out-dir lib && npm run less & npm run copy",
    "build:docs": "webpack --config ./webpack/doc-config.es6.js",
    "docs": "webpack-dev-server --config ./webpack/doc-config.es6.js",
    "release": "release"
  },
  "release-script": {
    "defaultDryRun": "false"
  },
  "peerDependencies": {
    "react": ">=0.14.0",
    "react-dom": ">=0.14.0"
  },
  "devDependencies": {
    "@monastic.panic/component-playground": "^2.0.0",
    "babel-cli": "^6.5.2",
    "babel-loader": "^6.2.4",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-jason": "^1.0.1",
    "chai": "^3.5.0",
    "chai-as-promised": "^5.3.0",
    "cpy-cli": "^1.0.0",
    "css-loader": "^0.23.1",
    "eslint": "^2.7.0",
    "extract-text-webpack-plugin": "^1.0.1",
    "imports-loader": "^0.6.3",
    "json-loader": "^0.5.1",
    "karma": "^0.13.14",
    "karma-jsdom-launcher": "^3.0.0",
    "karma-mocha": "~0.2.2",
    "karma-mocha-reporter": "^2.0.0",
    "karma-sinon-chai": "^1.1.0",
    "karma-sourcemap-loader": "^0.3.2",
    "karma-webpack": "^1.7.0",
    "less": "^2.5.3",
    "less-loader": "^2.0.0",
    "lolex": "^1.4.0",
    "mocha": "^2.4.5",
    "raw-loader": "^0.5.1",
    "react": "^15.0.1",
    "react-dom": "^15.0.1",
    "release-script": "^1.0.2",
    "rimraf": "^2.4.3",
    "simulant": "^0.2.0",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.6.0",
    "style-loader": "^0.13.1",
    "teaspoon": "^6.3.0",
    "webpack": "^1.12.2",
    "webpack-dev-server": "^1.12.1"
  },
  "dependencies": {
    "classnames": "^2.2.3",
    "dom-helpers": "^2.2.4",
    "react-overlays": "^0.6.0"
  },
  "readme": "React Bootstrap Modal\r\n===================================\r\n\r\nPartly a port of [jschr's bootstrap modal](https://github.com/jschr/bootstrap-modal/). Reimplements the Twitter Bootstrap Modal component in a React friendly way. Based on the orginal work of the react-bootstrap team.\r\n\r\n__note__: React bootstrap modal is compatible with bootstrap __3.3.4+__ if you want to use it with an earlier version of bootstrap 3 you need to override the `.modal-backdrop` styles to be the most recent one.\r\n\r\n## Features\r\n\r\n- Scoped focus\r\n- Stackable! (use with constraint)\r\n- Animated feedback when trying to close a \"static\" Modal\r\n- Straightforward API, no ModalTrigger or Overlay mixins to deal with\r\n\r\n## Use\r\n\r\n```js\r\nvar Modal = require('react-bootstrap-modal')\r\n\r\nclass ModalExample extends React.Component {\r\n\r\n  render(){\r\n    let closeModal = () => this.setState({ open: false })\r\n\r\n    let saveAndClose = () => {\r\n      api.saveData()\r\n        .then(() => this.setState({ open: false }))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button type='button'>Launch modal</button>\r\n\r\n        <Modal \r\n          show={this.state.open} \r\n          onHide={closeModal}\r\n          aria-labelledby=\"ModalHeader\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='ModalHeader'>A Title Goes here</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Some Content here</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            // If you don't have anything fancy to do you can use \r\n            // the convenient `Dismiss` component, it will \r\n            // trigger `onHide` when clicked\r\n            <Modal.Dismiss className='btn btn-default'>Cancel</Modal.Dismiss>\r\n\r\n            // Or you can create your own dismiss buttons\r\n            <button className='btn btn-primary' onClick={saveAndClose}>\r\n              Save\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReact.render(<ModalExample />, document.body);\r\n\r\n```\r\n\r\n### `Modal`\r\n\r\nThe main Modal Component.\r\n\r\n#### Props\r\n\r\n- `show`: `Boolean(default false)` make the Modal visible or hidden\r\n- `backdrop`: `Enum<'static', true, false>(default true)` - Should the modal render a backdrop overlay. `\"static\"` backdrops are not dismissable by clicking the backdrop.\r\n\r\n- `animate`: `Boolean(default true)` - animate the entry and exit of the modal\r\n- `attentionAnimation`: `String(default 'shake')` - an animation class added to the modal when a \"static\" backdrop is clicked\r\n- `keyboard`: `Boolean(default true)` - Modal is dismissable via the `esc` key\r\n- `onTransitionIn`: handler fires as the Modal starts entering\r\n- `onTransitionedIn`: handler fires after the enter animation finishes\r\n- `onTransitionOut`: handler fires as the Modal starts exiting\r\n- `onTransitionedOut`: handler fires after the exit animation finishes\r\n- `container`: `Node(default document.body)`, a DOM Node to append the modal too\r\n\r\n### `Modal.Header`\r\n\r\nThe Header section of Modal. If not included be sure to add an `aria-labelledby` elsewhere to keep the Modal accessible.\r\n\r\n#### Props\r\n  - `closeButton`: `Boolean(default true)` - render a close button or not\r\n  - `onClose`: `Function()` - a Handle when the close button is clicked. if left `undefined` the Header will automatically wire itself into the parent Modal `onHide()`, so you only need to specify a handler if you want a different behavior\r\n\r\n### `Modal.Title`\r\n\r\n### `Modal.Body`\r\n\r\nThe main content of the Modal, a convenience Component for: `<div className='modal-body'>content</div>`\r\n\r\n### `Modal.Footer`\r\n\r\nThe bottom footer of the Modal, a convenience Component for: `<div className='modal-footer'>content</div>`\r\n\r\n### `Modal.Dismiss`\r\n\r\nA dismiss button for the Parent Modal. `Dismiss` button will trigger its parent Modal `onHide()` handler. You don't need to use a Dismiss button, they are jsut a Convenience Component.\r\n  \r\n### `Modal.BaseModal`\r\n\r\nBaseModal represents just the modal markup without any of the logic to render it to the `document.body`. It is generally not recommended that you work with this component directly. You can use it if you really want to render a Modal inline.\r\n\r\n## Styles\r\n\r\nYou can use this module seperate from Twitter Bootstrap by just including the `/lib/styles/rbm-complete.css` file, or if you are using bootstrap and don't want to re-include styles you can just use `/lib/styles/rbm-patch.css`.\r\n\r\nIf you don't like the bootstrap visual look and feel, you can adjust `variables.less` to suit your needs.\r\n\r\n\r\n### 'Warning: owner-based and parent-based contexts differ`\r\n\r\nI know. It's fine. Really, nothing is wrong here. I wish I could make the cwarning go away, but instead we have to wait until react `0.14`",
  "readmeFilename": "README.md",
  "_id": "react-bootstrap-modal@2.1.0",
  "_from": "react-bootstrap-modal@~2.1.0"
}
