{
  "name": "react-image-gallery",
  "version": "0.6.4",
  "description": "React Carousel, React Image gallery, React Slide Show component",
  "main": "./build/image-gallery",
  "scripts": {
    "start": "gulp dev",
    "build": "gulp build"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/xiaolin/react-image-gallery.git"
  },
  "keywords": [
    "react",
    "carousel",
    "react-component",
    "react-carousel",
    "react-slideshow",
    "react-gallery",
    "react carousel",
    "react slideshow",
    "react gallery",
    "image gallery",
    "image slider",
    "slideshow",
    "gallery",
    "slider"
  ],
  "author": {
    "name": "Xiao Lin"
  },
  "email": "xiao@linxtion.com",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/xiaolin/react-image-gallery/issues"
  },
  "homepage": "https://github.com/xiaolin/react-image-gallery",
  "devDependencies": {
    "babel-eslint": "^6.0.4",
    "babel-plugin-transform-object-assign": "^6.8.0",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-react": "^6.5.0",
    "babelify": "^7.2.0",
    "browserify": "^13.0.0",
    "eslint": "^2.10.2",
    "eslint-plugin-react": "^5.1.1",
    "gulp": "^3.8.11",
    "gulp-babel": "^6.1.2",
    "gulp-concat": "^2.6.0",
    "gulp-connect": "^2.2.0",
    "gulp-livereload": "^3.8.0",
    "gulp-rename": "^1.2.0",
    "gulp-sass": "^2.1.1",
    "gulp-uglify": "^1.5.3",
    "react": "^15.0.1",
    "react-dom": "^15.0.1",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.0.0",
    "watchify": "^2.4.0"
  },
  "dependencies": {
    "react-swipeable": "^3.3.1"
  },
  "readme": "React Image Gallery\n===\n\n[![npm version](https://badge.fury.io/js/react-image-gallery.svg)](https://badge.fury.io/js/react-image-gallery)\n[![Download Count](http://img.shields.io/npm/dm/react-image-gallery.svg?style=flat)](http://www.npmjs.com/package/react-image-gallery)\n\n![demo gif](https://github.com/xiaolin/react-image-gallery/raw/master/example/image_gallery.gif)\n\nReact image gallery is a React component for building image gallery and carousels\n\nFeatures of `react-image-gallery`\n* Mobile friendly\n* Thumbnail navigation\n* Responsive design\n\n## Live Demo (try it on mobile)\nLive demo: [`linxtion.com/demo/react-image-gallery`](http://linxtion.com/demo/react-image-gallery)\n\n## Getting started\n\n```\nnpm install react-image-gallery\n```\n\n### SASS\n\n```\n@import \"../node_modules/react-image-gallery/src/image-gallery\";\n```\n\n### CSS\n\n```\nbuild/image-gallery.css\n```\n\n### EXAMPLE\nNeed more example? See example/app.js\n```js\nimport ImageGallery from 'react-image-gallery';\n\nclass MyComponent extends React.Component {\n\n  handleImageLoad(event) {\n    console.log('Image loaded ', event.target)\n  }\n\n  handlePlay() {\n    this._imageGallery.play()\n  }\n\n  handlePause() {\n    this._imageGallery.pause()\n  }\n\n  render() {\n\n    const images = [\n      {\n        original: 'http://lorempixel.com/1000/600/nature/1/',\n        thumbnail: 'http://lorempixel.com/250/150/nature/1/',\n        originalClass: 'featured-slide',\n        thumbnailClass: 'featured-thumb',\n        originalAlt: 'original-alt',\n        thumbnailAlt: 'thumbnail-alt',\n        description: 'Optional description...'\n        srcSet: 'Optional srcset (responsive images src)'\n        size: 'Optional size (image size relative to the breakpoint)'\n      },\n      {\n        original: 'http://lorempixel.com/1000/600/nature/2/',\n        thumbnail: 'http://lorempixel.com/250/150/nature/2/'\n      },\n      {\n        original: 'http://lorempixel.com/1000/600/nature/3/',\n        thumbnail: 'http://lorempixel.com/250/150/nature/3/'\n      }\n    ]\n\n    return (\n      <div>\n        <button onClick={this.handlePlay.bind(this)}>Play</button>\n        <button onClick={this.handlePause.bind(this)}>Pause</button>\n        <ImageGallery\n          ref={i => this._imageGallery = i}\n          items={images}\n          slideInterval={2000}\n          onImageLoad={this.handleImageLoad}/>\n      </div>\n    );\n  }\n\n}\n```\n\n# Props\n\n* `items`: (required) Array of objects, see example above,\n* `infinite`: Boolean, default `true`\n  * infinite sliding\n* `lazyLoad`: Boolean, default `false`\n* `showNav`: Boolean, default `true`\n* `showThumbnails`: Boolean, default `true`\n* `showBullets`: Boolean, default `false`\n* `showIndex`: Boolean, default `false`\n* `autoPlay`: Boolean, default `false`\n* `disableThumbnailScroll`: Boolean, default `false`\n  * disables the thumbnail container from adjusting\n* `slideOnThumbnailHover`: Boolean, default `false`\n  * slides to the currently hovered thumbnail\n* `disableArrowKeys`: Boolean, default `false`\n* `defaultImage`: String, default `undefined`\n  * an image src pointing to your default image if an image fails to load\n  * handles both slide image, and thumbnail image\n* `onImageError`: Function, `callback(event)`\n  * overrides defaultImage\n* `onThumbnailError`: Function, `callback(event)`\n  * overrides defaultImage\n* `indexSeparator`: String, default `' / '`, ignored if `showIndex` is false\n* `slideInterval`: Integer, default `3000`\n* `startIndex`: Integer, default `0`\n* `onImageLoad`: Function, `callback(event)`\n* `onSlide`: Function, `callback(currentIndex)`\n* `onPause`: Function, `callback(currentIndex)`\n* `onPlay`: Function, `callback(currentIndex)`\n* `onClick`: Function, `callback(event)`\n* `renderItem`: Function, custom item rendering\n  * As a prop on a specific item `[{thumbnail: '...', renderItem: '...'}]`\n  * As a prop passed into `ImageGallery` to completely override `_renderItem`, see original below\n    ```javascript\n      _renderItem(item) {\n        const onImageError = this.props.onImageError || this._handleImageError\n\n        return (\n          <div className='image-gallery-image'>\n            <img\n                src={item.original}\n                alt={item.originalAlt}\n                srcSet={item.srcSet}\n                sizes={item.sizes}\n                onLoad={this.props.onImageLoad}\n                onError={onImageError.bind(this)}\n            />\n            {\n              item.description &&\n                <span className='image-gallery-description'>\n                  {item.description}\n                </span>\n            }\n          </div>\n        )\n      }\n    ```\n\n\n# functions\n\n* `play()`: continuous plays if image is not hovered\n* `pause()`: pauses the slides\n* `fullScreen()`: activates full screen\n* `slideToIndex(index)`: slides to a specific index\n* `getCurrentIndex()`: returns the current index\n\n# Notes\n\n* Feel free to contribute and or provide feedback!\n\n# To build the example locally\n\n```\ngit clone https://github.com/xiaolin/react-image-gallery.git\nnpm install\nnpm start\n```\n\nThen open [`localhost:8001`](http://localhost:8001) in a browser.\n\n\n# License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "react-image-gallery@0.6.4",
  "dist": {
    "shasum": "a705f7992f1d6b737001c0249bdec9fee77e95e3"
  },
  "_from": "react-image-gallery@",
  "_resolved": "https://registry.npmjs.org/react-image-gallery/-/react-image-gallery-0.6.4.tgz"
}
